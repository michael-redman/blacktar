#!/bin/bash

#bucket hmac path

dir=`cd $(dirname $0) && pwd`
passphrase_xxd="`xxd /dev/stdin`"
if [ ! "$tmp" ]; then tmp=/tmp; fi
rm -rf "$tmp/$$"
mkdir -p "$tmp/$$"

mkdir -p `dirname "$3"`
#add big retry loop all the way thru verifying the decrypted file because libs3 sometimes returns 0 even if the file is short.  Assume that if the file is found on S3 then it is correct because it's the backup script's responsibility to ensure that the file was correctly stored
while [ true ]; do
	while [ true ]; do
		s3 -u get "$1/$2" > "$tmp/$$/out" 2> "$tmp/$$/err"
		r=$?
		if [ "`grep 'ERROR: ErrorNoSuchKey
  Message: The specified key does not exist.' \"$tmp/$$/err\"`" ]; then
			cat "$tmp/$$/err" >&2
			echo "($3)" >&2
			exit 3; fi
		if [ `stat -c%s "$tmp/$$/err"` -ne 0 ]; then r=1; fi
		if [ $r -eq 0 ]; then break; fi
		cat "$tmp/$$/err" >&2
		sleep 60; done
	rm -rf "$tmp/$$/$$"
	mkdir "$tmp/$$/$$"
	( gpg --batch --no-tty --passphrase-fd 3 3< <(echo -n "$passphrase_xxd" | xxd -r) < "$tmp/$$/out" | tar xCf "$tmp/$$/$$" - ) 2> "$tmp/$$/err"
#	err=`grep -v -e 'gpg: CAST5 encrypted data' -e 'gpg: encrypted with 1 passphrase' -e 'gpg: WARNING: message was not integrity protected' "$tmp/$$/err"`
	err=`grep -v -e 'gpg: CAST5 encrypted data' -e 'gpg: encrypted with 1 passphrase' "$tmp/$$/err"`
	if [ "$err" ]; then
		echo "$err" >&2
		echo "blacktar s3_verify $2: gpg/tar pipeline printed errors, retrying" >&2
		continue; fi
	if
		[ ! -f "$tmp/$$/$$/$2" ]
		then
			echo "blacktar s3_verify: failed to extract $2, retrying" >&2
			continue; fi
	mv "$tmp/$$/$$/$2" "$3"
	test_hmac=`"$dir/../../lib/blacktar/hmac_of_file" <(echo -n "$passphrase_xxd" | xxd -r) "$3"`
	if
		[ ! "$test_hmac" -o \( "$2" != "$test_hmac" \) ]
		then
			rm -rf "$tmp/$$/$$"
			rm "$3"
			echo "blacktar s3_verify: checksum mismatch: $2, retrying" 1>&2
			continue; fi
	break; done
	rm -rf "$tmp/$$"
	exit 0

#IN GOD WE TRVST.
