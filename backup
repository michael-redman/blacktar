#!/bin/bash

USE="blacktar_backup [-p /path/prefix] 'db conn string' /key/file s3-bucket"

dir=`cd $(dirname $0) && pwd`

argv=("$@")
while	getopts	"p:" opt; do
	case	"$opt" in
		p)	prefix=(-p "$OPTARG");;
		\?)	echo "$USE" >&2; exit 1;; esac; done
if	[ $(($#-$OPTIND)) -ne 2 ]
	then echo "$USE" >&2; exit 1; fi
connection_string="${argv[$OPTIND-1]}"
passphrase_xxd="`xxd ${argv[$OPTIND]}`"

if [ ! "$tmp" ]; then tmp=/tmp; fi
mkdir "$tmp/$$"

function s3_put { #s3-bucket-name hash path

	echo "put: starting $2 $3" >&2
	mkdir "$tmp/$$/$2.d"
	ln -s "$3" "$tmp/$$/$2.d/$2"
#	noise to osbscure file size
#	"$dir"/../lib/blacktar/noise "$3" "$tmp/$$/$2.d/noise"

	( ls "$tmp/$$/$2.d" | tar chCfT "$tmp/$$/$2.d" - - | gpg -c --force-mdc --batch --no-tty --passphrase-fd 3 3< <(echo -n "$passphrase_xxd" | xxd -r) > "$tmp/$$/$2" ) 2> "$tmp/$$/err"
	if [ `stat -c%s "$tmp/$$/err"` -ne 0 ]; then
		cat "$tmp/$$/err" >&2
		echo "blacktar put: aborting on tar|gpg error for $2 $3" >&2
		rm -f "$tmp/$$/$2"
		rm -rf "$tmp/$$/$2.d"
		return 1; fi
#	for line in `cat $tmp/$$/err`; do
#		if
#			[[ "$line" =~ ^tar:\ [0-9a-z]{40}: ]]
#			then
#				rm -f "$tmp/$$/$2"
#				rm -rf "$tmp/$$/$2.d"
#				echo "put: aborting on tar error for $2 $3" >&2
#				echo "$2"
#				return 1; fi; done;
	rm "$tmp/$$/$2.d"/*

	md5=`openssl dgst -md5 -binary "$tmp/$$/$2" | openssl enc -base64`

	( gpg --batch --no-tty --passphrase-fd 3 3< <(echo -n "$passphrase_xxd" | xxd -r) < "$tmp/$$/$2" | tar xCf "$tmp/$$/$2.d" - ) 2> "$tmp/$$/err"
#	err=`grep -v -e 'gpg: CAST5 encrypted data' -e 'gpg: encrypted with 1 passphrase' -e 'gpg: WARNING: message was not integrity protected' "$tmp/$$/err"`
	err=`grep -v -e 'gpg: CAST5 encrypted data' -e 'gpg: encrypted with 1 passphrase' "$tmp/$$/err"`
	if [ "$err" ]; then
		echo "$err" >&2
		echo "blacktar put: aborting on gpg|tar pipe error for $2 $3" >&2
		rm "$tmp/$$/$2"
		rm -rf "$tmp/$$/$2.d"
		return 1; fi 
	if
		[ ! -f "$tmp/$$/$2.d/$2" ]; then
		echo "blacktar verify: missing from archive: $2 ( $3 )" >&2
		rm "$tmp/$$/$2"
		rm -rf "$tmp/$$/$2.d"
		return 1; fi
	test_hmac=`"$dir"/../lib/blacktar/hmac_of_file <(echo -n "$passphrase_xxd" | xxd -r) "$tmp/$$/$2.d/$2"`
	if
		[ ! "$test_hmac" -o \( "$2" != "$test_hmac" \) ]
		then
			rm -rf "$tmp/$$/$2.d"
			rm "$tmp/$$/$2"
			echo "put: aborting on checksum mismatch: $2 $3" 1>&2
			echo "$2"
			return 1; fi

		rm -rf "$tmp/$$/$2.d"
		r=1
		modulus=1
		while [ $r -ne 0 ]; do
			err=$(s3 -u put "$1/$2" filename="$tmp/$$/$2" md5="$md5" 2>&1 | grep -vE '^[0-9]+ bytes remaining \([0-9]{1,3}% complete\) \.\.\.'; exit ${PIPESTATUS[0]})
			r=$?
			if [ $r -ne 0 ]; then echo "s3 returned $r" >&2; fi
			if [ "$err" ]; then echo "$err" >&2; r=1; fi
			if [ $r -eq 0 ]; then break; fi
			while [ $(($RANDOM%$modulus)) -ne 0 ]; do sleep 60; done
			modulus=$(($modulus+1)); done
		rm "$tmp/$$/$2"
		echo "put: finished $2 $3" >&2
		echo "$2$3"; }

"$dir"/../lib/verity/list_hmacs ${prefix[@]} "$connection_string" "${argv[$OPTIND]}" | sort -u > "$tmp/$$/db" &
"$dir"/../share/blacktar/s3_list_keys "${argv[$OPTIND+1]}" | sort > "$tmp/$$/s3" &
wait
diff "$tmp/$$/db" "$tmp/$$/s3" > "$tmp/$$/diff"
rm "$tmp/$$/db"
rm "$tmp/$$/s3"

while IFS= read -r -d '' line; do
	hash=`echo -n "$line" | cut -c 1-40`
	path=`echo -n "$line" | cut -c 41-`
	s3_put "${argv[$OPTIND+1]}" "$hash" "$path"
	done < <(grep --mmap '^<' "$tmp/$$/diff" | cut -c 3- | "$dir"/../lib/verity/paths_of_hmacs ${prefix[@]} "$connection_string")
rm -rf "$tmp/$$"

#IN GOD WE TRVST.
